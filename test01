import React from "react"
import { TabbedPanel } from "@optum-osgp-temp/osgp-ui-component-lib";
import { BehaviorPatternLibrary } from "../sub-components/fads/pgp/behavior-pattern/BehaviorPatternLibrary";
import ReportItem from '../sub-components/fads/pgp/report-item/ReportItem';
import ReportSectionLibrary from "../sub-components/fads/pgp/reportSection/ReportSectionLibrary";
import { QueryClient, QueryClientProvider } from "react-query";
import { DataRuleGrid } from "../sub-components/fads/pgp/dataRule/DataRuleGrid";
import { PeerGroupGrid } from "../sub-components/fads/pgp/peerGroup/PeerGroupGrid";
import { JobMonitorGrid } from "../sub-components/fads/pgp/job-monitor/JobMonitorGrid";
import StudiesLibraryGrid from "../sub-components/fads/pgp/study/StudiesLibraryGrid";
import { useState } from "react";
import NotificationBanner from "../sub-components/fads/common/NotificationBanner/NotificationBanner";
import { CASE_ERROR_MSG, SHOW_ERROR_TOAST, BANNER_MSG, SHOW_SUCCESS_TOAST } from "../sub-components/fads/common/AppConstants";
import { store } from "@optum-osgp-temp/osgp-ui-state-management-lib";
import { PGPRootContainer, MainTitle } from "./PeerGroupProfiling";
import { AEPLogger } from "../../utils/AEPUtils";
import FadsUserInformationHistory from "../components/pages/FadsUserInformationHistory";

const queryClient = new QueryClient({
    defaultOptions: {
        queries: {
            refetchOnWindowFocus: false,
        },
    }
})

interface DiscProps {
	defaultValue: any
}

const panels = [
    {
        header: "Data Rule",
        content: <DataRuleGrid />,
    },
    {
        header: "Peer Group",
        content: <PeerGroupGrid />,
    },
    {
        header: "Behavior Pattern",
        content: <BehaviorPatternLibrary />,
    },
    {
        header: "Report Item",
        content: <ReportItem />,
    },
    {
        header: "Report Section",
        content: <ReportSectionLibrary />,
    },
    {
        header: "Study",
        content: <StudiesLibraryGrid />,
    },
    {
        header: "Job Monitor",
        content: <JobMonitorGrid />,
    },
];

const PGP = ({ defaultValue }: DiscProps) => {
    const [showToast] = store.useStoreState(SHOW_SUCCESS_TOAST);
    const [showErrorToast] = store.useStoreState(SHOW_ERROR_TOAST);
    const [showSuccessMSG] = store.useStoreState(BANNER_MSG);
    const [head, setHead] = useState<any>(defaultValue);
    const onHeadPress = (val: any) => {
        setHead(val)
    }
    AEPLogger("Peer Group Profiling", "User Clicked on the tab "+panels[head]?.header, "INFO");
    return (
        <>
            <div data-testid="pgp-test" id="peer-group-profiling">
                <PGPRootContainer id="pgp-root">
                    <MainTitle>Peer Group Profiling</MainTitle>
                    <QueryClientProvider client={queryClient}>
                        <TabbedPanel className="secondary-nav-menu pgp-tabbed-panel"
                            panels={panels}
                            titlesAs="h1"
                            onHeaderPress={onHeadPress}
                            selectedPanel={head} />
                    </QueryClientProvider>
                </PGPRootContainer>
            </div>
            {(showToast || showErrorToast) && 
                <NotificationBanner
                    message={showErrorToast ? CASE_ERROR_MSG : showSuccessMSG}
                    type={showErrorToast ? "error" : "success"}
                    autoClose={true} 
                    showToast={showErrorToast || showToast}
                    style={{
                        position: "fixed",
                        top: "150px",
                        width: "95%",
                        display: "flex",
                        justifyContent: "center",
                    }}
                />
            }
        </>
    );
};


export default PGP;
