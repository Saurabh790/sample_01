public ReportItemDTO addReportItem(ReportItemDTO reportItemDTO) {
		ReportItemDTO retReportItemDTO = new ReportItemDTO();
		DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(ReportSectionConstants.DATE_FORMAT_MMDDYYYY_HHMMSS_A,
				Locale.ENGLISH);
		String reportItemNameLc = reportItemDTO.getReportItemName().toLowerCase().trim();
			try {
				PrmRiRptItemT reportItem = reportItemsRepository.getReportItemByName(reportItemNameLc);
				if (reportItem == null) {
					Integer reportItemId = reportItemsRepository.retrieveNextRiId();
					if(reportItemId ==null){
                        reportItemId=1;
                    }
					reportItemDTO.setReportItemId(reportItemId);
					PrmRiRptItemT ri = new PrmRiRptItemT();
					UiUserBase uiUserBaseCr = new UiUserBase();	
					uiUserBaseCr.setUiSystemId(reportItemDTO.getCreatedBySystemId());
					ri.setUiUserBaseCr(uiUserBaseCr);				// Set UiUserBase
					UiUserBase uiUserBaseUpd = new UiUserBase();
					uiUserBaseUpd.setUiSystemId(reportItemDTO.getModifiedBySystemId());
					ri.setUiUserBaseUpd(uiUserBaseUpd);
					ri.setRiId(reportItemId);
					ri.setReportItemName(reportItemDTO.getReportItemName().trim());
					ri.setRiCalcFmt(String.valueOf(reportItemDTO.getCalcFMT()));
					ri.setRiMinimumDenom(reportItemDTO.getMinimumDenominator());
					ri.setConstantDen(reportItemDTO.getDivideConstant());
					ri.setConstantDenOp(ReportSectionConstants.OP_STR);
					ri.setConstantNum(reportItemDTO.getMultipleConstant());
					ri.setConstantNumOp(ReportSectionConstants.OP_STR);
					
					
					logit.info("Report Item saved with getModifiedDate Item" +reportItemDTO.getCreatedDate());
					logit.info("Report Item saved with getModifiedDate Item" +reportItemDTO.getModifiedDate());
					Date createdDate = Date.from(
						    LocalDateTime.parse(reportItemDTO.getCreatedDate(), dateTimeFormatter)
						                 .atZone(ZoneId.systemDefault())
						                 .toInstant()
						);
						ri.setCreateDate(createdDate);
						
						Date modifiedDate = Date.from(
							    LocalDateTime.parse(reportItemDTO.getModifiedDate(), dateTimeFormatter)
							                 .atZone(ZoneId.systemDefault())
							                 .toInstant()
							);
						
						
						logit.info("Report Item saved with createdDate Item" +createdDate);
						logit.info("Report Item saved with modifiedDate Item" +modifiedDate);
							ri.setCreateDate(createdDate);
					ri.setCreateDate(createdDate);
					ri.setUpdateDate(modifiedDate);
					reportItemsRepository.saveAndFlush(ri);
					saveReportItemFormulas(reportItemDTO);
					retReportItemDTO.setReportItemId(reportItemId);
					retReportItemDTO.setReportItemName(reportItemDTO.getReportItemName().trim());
					retReportItemDTO.setCreatedDate(reportItemDTO.getCreatedDate());
					retReportItemDTO.setModifiedDate(reportItemDTO.getModifiedDate());
					retReportItemDTO.setModifiedBySystemId(reportItemDTO.getModifiedBySystemId());
					retReportItemDTO.setCreatedBySystemId(reportItemDTO.getCreatedBySystemId());
					logit.info("Report Item saved with Report Item ID = {}", reportItemId);
				} else {
					retReportItemDTO.setReportItemId(reportItem.getRiId());
					retReportItemDTO.setReportItemName(ReportSectionConstants.REPORT_ITEM_EXISTS);
					retReportItemDTO.setModifiedBySystemId(reportItem.getUiUserBaseUpd().getUiSystemId());
					retReportItemDTO.setCreatedBySystemId(reportItem.getUiUserBaseCr().getUiSystemId());
				}
			} catch (Exception e) {
				throw new ReportSectionApiException(e);
			}
		return retReportItemDTO;
	}
	
	
	
	
	ri.setCreateDate(createdDate);
					ri.setUpdateDate(modifiedDate);
					theses value in logs showing like below still its savinbg date not minute and seconds why I meant not time 
					
					
					
					
					2025-08-11 16:38:51 [http-nio-8080-exec-8] INFO  c.o.f.p.r.a.s.i.ReportItemDataService - Report Item saved with getModifiedDate Item08/11/2025 04:38:51 PM
2025-08-11 16:38:51 [http-nio-8080-exec-8] INFO  c.o.f.p.r.a.s.i.ReportItemDataService - Report Item saved with getModifiedDate Item08/11/2025 04:38:51 PM
2025-08-11 16:38:51 [http-nio-8080-exec-8] INFO  c.o.f.p.r.a.s.i.ReportItemDataService - Report Item saved with createdDate ItemMon Aug 11 16:38:51 IST 2025
2025-08-11 16:38:51 [http-nio-8080-exec-8] INFO  c.o.f.p.r.a.s.i.ReportItemDataService - Report Item saved with modifiedDate ItemMon Aug 11 16:38:51 IST 2025



package com.optum.fads.pgp.datarules.domain;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import com.optum.fads.authorization.api.domain.UiUserBase;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
/**
 * The persistent class for the PRM_RI_RPT_ITEM_T database table.
 *
 */
@Entity
@Table(name="PRM_RI_RPT_ITEM_T")
public class PrmRiRptItemT implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name="RI_ID")
	private Integer riId;

	@Column(name="RI_CALC_FMT")
	private String riCalcFmt;

	@Column(name="RI_NAME")
	private String reportItemName;

	@Column(name="RI_MINIMUM_DENOM")
	private Integer riMinimumDenom;

	@Column(name="CONSTANT_DEN")
	private Integer constantDen;

	@Column(name="CONSTANT_DEN_OP")
	private String constantDenOp;

	@Column(name="CONSTANT_NUM")
	private Integer constantNum;

	@Column(name="CONSTANT_NUM_OP")
	private String constantNumOp;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="CREATE_USR")
	private UiUserBase uiUserBaseCr;

	@Temporal(TemporalType.DATE)
	@Column(name="CREATE_DTE")
	private Date createDate;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="UPDATE_USR")
	private UiUserBase uiUserBaseUpd;

	@Temporal(TemporalType.DATE)
	@Column(name="UPDATE_DTE")
	private Date updateDate;

	@OneToMany(mappedBy="prmRiRptItemT")
	private List<PrmBpRiFormulaT> prmBpRiFormulaTs;

	@OneToMany(mappedBy="prmRiRptItemT")
	private List<PrmRsRiT> prmRsRiTs;

	public Integer getRiId() {
		return this.riId;
	}

	public void setRiId(Integer riId) {
		this.riId = riId;
	}

	public String getRiCalcFmt() {
		return this.riCalcFmt;
	}

	public void setRiCalcFmt(String riCalcFmt) {
		this.riCalcFmt = riCalcFmt;
	}

	public String getReportItemName() {
		return reportItemName;
	}

	public void setReportItemName(String reportItemName) {
		this.reportItemName = reportItemName;
	}

	public Integer getRiMinimumDenom() {
		return this.riMinimumDenom;
	}

	public void setRiMinimumDenom(Integer riMinimumDenom) {
		this.riMinimumDenom = riMinimumDenom;
	}

	public Integer getConstantDen() {
		return this.constantDen;
	}

	public void setConstantDen(Integer constantDen) {
		this.constantDen = constantDen;
	}

	public String getConstantDenOp() {
		return this.constantDenOp;
	}

	public void setConstantDenOp(String constantDenOp) {
		this.constantDenOp = constantDenOp;
	}

	public Integer getConstantNum() {
		return this.constantNum;
	}

	public void setConstantNum(Integer constantNum) {
		this.constantNum = constantNum;
	}

	public String getConstantNumOp() {
		return this.constantNumOp;
	}

	public void setConstantNumOp(String constantNumOp) {
		this.constantNumOp = constantNumOp;
	}

	public UiUserBase getUiUserBaseCr() {
		return this.uiUserBaseCr;
	}

	public void setUiUserBaseCr(UiUserBase uiUserBaseCr) {
		this.uiUserBaseCr = uiUserBaseCr;
	}
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public UiUserBase getUiUserBaseUpd() {
		return this.uiUserBaseUpd;
	}

	public void setUiUserBaseUpd(UiUserBase uiUserBaseUpd) {
		this.uiUserBaseUpd = uiUserBaseUpd;
	}

	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	public List<PrmBpRiFormulaT> getPrmBpRiFormulaTs() {
		return this.prmBpRiFormulaTs;
	}

	public void setPrmBpRiFormulaTs(List<PrmBpRiFormulaT> prmBpRiFormulaTs) {
		this.prmBpRiFormulaTs = prmBpRiFormulaTs;
	}

	public PrmBpRiFormulaT addPrmBpRiFormulaT(PrmBpRiFormulaT prmBpRiFormulaT) {
		getPrmBpRiFormulaTs().add(prmBpRiFormulaT);
		prmBpRiFormulaT.setPrmRiRptItemT(this);

		return prmBpRiFormulaT;
	}

	public PrmBpRiFormulaT removeRiformula(PrmBpRiFormulaT prmBpRiFormulaT) {
		getPrmBpRiFormulaTs().remove(prmBpRiFormulaT);
		prmBpRiFormulaT.setPrmRiRptItemT(null);

		return prmBpRiFormulaT;
	}

	public PrmRsRiT addPrmRsRiT(PrmRsRiT prmRsRiT) {
		getPrmRsRiTs().add(prmRsRiT);
		prmRsRiT.setPrmRiRptItemT(this);

		return prmRsRiT;
	}

	public PrmRsRiT removePrmRsRiT(PrmRsRiT prmRsRiT) {
		getPrmRsRiTs().remove(prmRsRiT);
		prmRsRiT.setPrmRiRptItemT(null);

		return prmRsRiT;
	}

	public List<PrmRsRiT> getPrmRsRiTs() {
		return this.prmRsRiTs;
	}

	public void setPrmRsRiTs(List<PrmRsRiT> prmRsRiTs) {
		this.prmRsRiTs = prmRsRiTs;
	}

}
