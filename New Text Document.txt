package com.optum.fads.userroles.api.dao;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.optum.fads.userroles.api.dto.UserListItem;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.transaction.Transactional;

@Repository
@Transactional
public class UserDaoImpl implements UserDao {

    @PersistenceContext
    private EntityManager em;

    @Override
    public List<UserListItem> getUserList() {
        String jpql = """
            SELECT new com.optum.fads.userroles.api.dto.UserListItem(
                u.uiSystemId, u.uiUserId, u.uiLastName, u.uiFirstName, u.uiTitle, u.uiEmailAddress,
                f.fadsGrpName, s.surGrpName, c.caseGrpName
            )
            FROM com.optum.fads.userroles.api.domain.UiUserBase u
            JOIN com.optum.fads.userroles.api.domain.SeUsrGrp g ON g.uiSystemId = u.uiSystemId
            JOIN com.optum.fads.userroles.api.domain.SeFadsGrp f ON f.id = g.fadsGrp
            JOIN com.optum.fads.userroles.api.domain.SeSurGrp  s ON s.surGrpId  = g.surGrpId
            JOIN com.optum.fads.userroles.api.domain.SeCaseGrp c ON c.caseGrpId = g.caseGrpId
            """;

        return em.createQuery(jpql, UserListItem.class).getResultList();
    }
}




 can u correct above query
 
 package com.optum.fads.userroles.api.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.math.BigDecimal;

@Getter
@Setter
@Entity
@Table(name = "SE_CASE_GRP")
public class SeCaseGrp {
    @Id
    @Column(name = "CASE_GRP_ID", nullable = false, precision = 5)
    private BigDecimal id;

    @Size(max = 40)
    @Column(name = "CASE_GRP_NAME", length = 40)
    private String caseGrpName;

}
package com.optum.fads.userroles.api.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.math.BigDecimal;

@Getter
@Setter
@Entity
@Table(name = "SE_FADS_GRP")
public class SeFadsGrp {
    @Id
    @Column(name = "FADS_GRP_ID", nullable = false, precision = 5)
    private BigDecimal id;

    @Size(max = 40)
    @Column(name = "FADS_GRP_NAME", length = 40)
    private String fadsGrpName;

}
package com.optum.fads.userroles.api.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.math.BigDecimal;

@Getter
@Setter
@Entity
@Table(name = "SE_SUR_GRP")
public class SeSurGrp {
    @Id
    @Column(name = "SUR_GRP_ID", nullable = false, precision = 5)
    private BigDecimal id;

    @Size(max = 40)
    @Column(name = "SUR_GRP_NAME", length = 40)
    private String surGrpName;

}
package com.optum.fads.userroles.api.domain;

import jakarta.persistence.*;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.time.Instant;

@Getter
@Setter
@Entity
@Table(name = "SE_USR_GRP")
public class SeUsrGrp {
    @Id
    @Size(max = 25)
    @Column(name = "UI_SYSTEM_ID", nullable = false, length = 25)
    private String uiSystemId;

    @MapsId
    @OneToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "UI_SYSTEM_ID", nullable = false)
    private UiUserBase uiUserBase;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FADS_GRP_ID")
    private SeFadsGrp fadsGrp;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FADS_SUR_GRP_ID")
    private SeSurGrp fadsSurGrp;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FADS_CASE_GRP_ID")
    private SeCaseGrp fadsCaseGrp;

    @Size(max = 25)
    @Column(name = "CREATED_BY", length = 25)
    private String createdBy;

    @Column(name = "CREATED_DT")
    private Instant createdDt;

    @Size(max = 25)
    @Column(name = "UPDATED_BY", length = 25)
    private String updatedBy;

    @Column(name = "UPDATED_DT")
    private Instant updatedDt;

}
package com.optum.fads.userroles.api.domain;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.time.Instant;

@Getter
@Setter
@Entity
@Table(name = "UI_USER_BASE")
public class UiUserBase {
    @Id
    @Size(max = 25)
    @Column(name = "UI_SYSTEM_ID", nullable = false, length = 25)
    private String uiSystemId;

    @Size(max = 50)
    @NotNull
    @Column(name = "UI_USER_ID", nullable = false, length = 50)
    private String uiUserId;

    @Size(max = 15)
    @Column(name = "UI_TITLE", length = 15)
    private String uiTitle;

    @Size(max = 40)
    @Column(name = "UI_LAST_NAME", length = 40)
    private String uiLastName;

    @Size(max = 20)
    @Column(name = "UI_FIRST_NAME", length = 20)
    private String uiFirstName;

    @Column(name = "UI_USER_INACTIVE")
    private Character uiUserInactive;

    @Size(max = 50)
    @NotNull
    @Column(name = "UI_E_MAIL_ADDRESS", nullable = false, length = 50)
    private String uiEMailAddress;

    @Size(max = 25)
    @Column(name = "UI_CREATED_BY", length = 25)
    private String uiCreatedBy;

    @Column(name = "UI_CREATED_DT")
    private Instant uiCreatedDt;

    @OneToOne(mappedBy = "uiUserBase")
    private SeUsrGrp seUsrGrp;

}
package com.optum.fads.userroles.api.domain;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.time.LocalDateTime;

@Getter
@Setter
@Entity
@Table(name = "UI_USER_HISTORY")
public class UiUserHistory {
    @EmbeddedId
    private UiUserHistoryId id;

    @MapsId("changeUsr")
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "CHANGE_USR", nullable = false)
    private UiUserBase changeUsr;

    @NotNull
    @Column(name = "CHANGE_DT", nullable = false)
    private LocalDateTime changeDt;

    @NotNull
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "UI_SYSTEM_ID", nullable = false)
    private UiUserBase uiSystem;

    @Size(max = 25)
    @NotNull
    @Column(name = "UI_USER_ID", nullable = false, length = 25)
    private String uiUserId;

    @Size(max = 15)
    @Column(name = "UI_TITLE", length = 15)
    private String uiTitle;

    @Size(max = 40)
    @Column(name = "UI_LAST_NAME", length = 40)
    private String uiLastName;

    @Size(max = 20)
    @Column(name = "UI_FIRST_NAME", length = 20)
    private String uiFirstName;

    @Column(name = "UI_USER_INACTIVE")
    private Character uiUserInactive;

    @Size(max = 50)
    @NotNull
    @Column(name = "UI_E_MAIL_ADDRESS", nullable = false, length = 50)
    private String uiEMailAddress;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FADS_GRP_ID")
    private SeFadsGrp fadsGrp;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FADS_SUR_GRP_ID")
    private SeSurGrp fadsSurGrp;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FADS_CASE_GRP_ID")
    private SeCaseGrp fadsCaseGrp;

}
package com.optum.fads.userroles.api.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Embeddable;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;
import org.hibernate.Hibernate;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Objects;

@Getter
@Setter
@Embeddable
public class UiUserHistoryId implements Serializable {
    private static final long serialVersionUID = 6868934681267323600L;
    @Size(max = 25)
    @NotNull
    @Column(name = "CHANGE_USR", nullable = false, length = 25)
    private String changeUsr;

    @NotNull
    @Column(name = "HIST_SEQ_NUM", nullable = false, precision = 7)
    private BigDecimal histSeqNum;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;
        UiUserHistoryId entity = (UiUserHistoryId) o;
        return Objects.equals(this.changeUsr, entity.changeUsr) &&
                Objects.equals(this.histSeqNum, entity.histSeqNum);
    }

    @Override
    public int hashCode() {
        return Objects.hash(changeUsr, histSeqNum);
    }

}


SELECT  t1.UI_SYSTEM_ID, UI_USER_ID, UI_LAST_NAME, UI_FIRST_NAME, UI_TITLE,UI_E_MAIL_ADDRESS,

 FADS_GRP_NAME, SUR_GRP_NAME,Â  CASE_GRP_NAME

FROM OMNI.UI_USER_BASE t1, OMNI.SE_USR_GRP t2, OMNI.SE_SUR_GRP t3,  OMNI.SE_CASE_GRP t5,OMNI.SE_FADS_GRP t6

where t1.UI_SYSTEM_ID = t2.UI_SYSTEM_ID

and t2.FADS_GRP_ID-t6.FADS_GRP_ID

and t2.SUR_GRP_ID = t3.SUR_GRP_ID

and t2.CASE_GRP_ID = t5.CASE_GRP_ID

