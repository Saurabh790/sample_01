org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlEntityManagerFactory' defined in class path resource [com/optum/fads/web/config/ServiceConfig.class]: Foreign key (FK182mh30s4cg194dy8twkfmxnj:PRM_PG_PEER_GROUP_T [CG_TYPE])) must have same number of columns as the referenced primary key (FADS_LU_VALUES_T [FIELD_ID,LU_VALUE])
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1234) ~[spring-context-6.1.5.jar:6.1.5]
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952) ~[spring-context-6.1.5.jar:6.1.5]
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624) ~[spring-context-6.1.5.jar:6.1.5]
        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.4.jar:3.2.4]
        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.2.4.jar:3.2.4]
        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.2.4.jar:3.2.4]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.4.jar:3.2.4]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354) ~[spring-boot-3.2.4.jar:3.2.4]
        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) ~[spring-boot-3.2.4.jar:3.2.4]
        at com.optum.fads.web.FADSWebApplication.main(FADSWebApplication.java:12) ~[classes/:na]
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
        at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]
        at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.4.jar:3.2.4]
Caused by: org.hibernate.MappingException: Foreign key (FK182mh30s4cg194dy8twkfmxnj:PRM_PG_PEER_GROUP_T [CG_TYPE])) must have same number of columns as the referenced primary key (FADS_LU_VALUES_T [FIELD_ID,LU_VALUE])
        at org.hibernate.mapping.ForeignKey.alignColumns(ForeignKey.java:134) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1969) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.secondPassCompileForeignKeys(InFlightMetadataCollectorImpl.java:1932) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1779) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:332) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503) ~[hibernate-core-6.4.4.Final.jar:6.4.4.Final]
        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75) ~[spring-orm-6.1.5.jar:6.1.5]
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390) ~[spring-orm-6.1.5.jar:6.1.5]
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-6.1.5.jar:6.1.5]
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-6.1.5.jar:6.1.5]
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366) ~[spring-orm-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833) ~[spring-beans-6.1.5.jar:6.1.5]
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782) ~[spring-beans-6.1.5.jar:6.1.5]
        ... 21 common frames omitted

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  03:05 min
[INFO] Finished at: 2025-08-20T15:25:51+05:30
[INFO] ------------------------------------------------------------------------






package com.optum.fads.pgp.datarules.domain;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serializable;
import java.util.List;

import org.hibernate.annotations.Where;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

/**
 * The persistent class for the FADS_LU_VALUES_T database table.
 * 
 */
@Builder
@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name="FADS_LU_VALUES_T")
@Where(clause = "FIELD_ID= 'CG_TYPE' AND  LU_VIEW='1'")
public class CgLuValuesT implements Serializable {
	private static final long serialVersionUID = 1L;

	//@EmbeddedId
	//private FadsLuValuesTPK id;

	@Column(name="FIELD_ID")
	private String fieldId;

	@Id
	@Column(name="LU_VALUE")
	private String luValue;


	@Column(name="LU_CODE")
	private String luCode;

	@Column(name="LU_LABEL")
	private String luLabel;

	@Column(name="LU_PARENT")
	private String luParent;

	@Column(name="LU_SEQ")
	private Integer luSeq;

	@Column(name="LU_VIEW")
	private String luView;

	@Column(name="OBJ_ID")
	private Integer objId;

	@OneToMany(mappedBy="cgType")
	private List<PrmPgPeerGroupT> prmPrmPgPeerGroupTs;
}




package com.optum.fads.pgp.datarules.domain;

import com.optum.fads.authorization.api.domain.UiUserBase;
import lombok.Data;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;


/**
 * The persistent class for the PRM_PG_PEER_GROUP_T database table.
 *
 */
@Entity
@Table(name="PRM_PG_PEER_GROUP_T")
@Data
public class PrmPgPeerGroupT implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name="CG_ID")
	private Integer cgId;

	@Column(name="CG_LEVEL")
	private String cgLevel;

	@Column(name="CG_NAME")
	private String studyGroupName;
/*
	@Column(name="CG_TYPE")
	private String cgType;
	*/

	@ManyToOne
	@JoinColumn(name="CG_TYPE")
	private CgLuValuesT cgType;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="CREATE_USR")
	private UiUserBase uiUserBaseCr;

	@Column(name="CREATE_DTE")
	private LocalDateTime createDate;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="UPDATE_USR")
	private UiUserBase uiUserBaseUpd;

	@Column(name="UPDATE_DTE")
	private LocalDateTime updateDate;
	/*
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="UPDATE_DTE",nullable = false,columnDefinition="default CURRENT_TIMESTAMP")
	private Date updateDate;

	@Temporal( value = TemporalType.TIMESTAMP )
    @ColumnDefault( value = "CURRENT_TIMESTAMP" )
	@Column(name="UPDATE_DTE",nullable = false)
    private LocalDateTime updateDate;
*/
	//bi-directional many-to-one association to PrmPgDrT
	@OneToMany(mappedBy="prmPgPeerGroupT")
	private List<PrmPgDrT> prmPgDrTs;

	//bi-directional many-to-one association to PrmPgForcedPartT
	@OneToMany(mappedBy="prmPgPeerGroupT")
	private List<PrmPgForcedPartT> prmPgForcedPartTs;

	public Integer getCgId() {
		return this.cgId;
	}

	public void setCgId(Integer cgId) {
		this.cgId = cgId;
	}

	public String getCgLevel() {
		return this.cgLevel;
	}

	public void setCgLevel(String cgLevel) {
		this.cgLevel = cgLevel;
	}

	public String getStudyGroupName() {
		return studyGroupName;
	}

	public void setStudyGroupName(String studyGroupName) {
		this.studyGroupName = studyGroupName;
	}
	/*
        public String getCgType() {
            return this.cgType;
        }

        public void setCgType(String cgType) {
            this.cgType = cgType;
        }
    */
	public LocalDateTime getCreateDate() {
		return createDate;
	}

	public void setCreateDate(LocalDateTime createDate) {
		this.createDate = createDate;
	}

	public LocalDateTime getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(LocalDateTime updateDate) {
		this.updateDate = updateDate;
	}
	/*
	@PreUpdate
	  protected void onUpdate() {
		this.updateDate = new Date();
	  }
	  */
	public List<PrmPgDrT> getPrmPgDrTs() {
		return this.prmPgDrTs;
	}

	public void setPrmPgDrTs(List<PrmPgDrT> prmPgDrTs) {
		this.prmPgDrTs = prmPgDrTs;
	}

	public PrmPgDrT addPrmPgDrT(PrmPgDrT prmPgDrT) {
		getPrmPgDrTs().add(prmPgDrT);
		prmPgDrT.setPrmPgPeerGroupT(this);

		return prmPgDrT;
	}

	public PrmPgDrT removePrmPgDrT(PrmPgDrT prmPgDrT) {
		getPrmPgDrTs().remove(prmPgDrT);
		prmPgDrT.setPrmPgPeerGroupT(null);

		return prmPgDrT;
	}

	public List<PrmPgForcedPartT> getPrmPgForcedPartTs() {
		return this.prmPgForcedPartTs;
	}

	public void setPrmPgForcedPartTs(List<PrmPgForcedPartT> prmPgForcedPartTs) {
		this.prmPgForcedPartTs = prmPgForcedPartTs;
	}

	public PrmPgForcedPartT addPrmPgForcedPartT(PrmPgForcedPartT prmPgForcedPartT) {
		getPrmPgForcedPartTs().add(prmPgForcedPartT);
		prmPgForcedPartT.setPrmPgPeerGroupT(this);

		return prmPgForcedPartT;
	}

	public PrmPgForcedPartT removePrmPgForcedPartT(PrmPgForcedPartT prmPgForcedPartT) {
		getPrmPgForcedPartTs().remove(prmPgForcedPartT);
		prmPgForcedPartT.setPrmPgPeerGroupT(null);

		return prmPgForcedPartT;
	}

	public UiUserBase getUiUserBaseUpd() {
		return this.uiUserBaseUpd;
	}

	public void setUiUserBaseUpd(UiUserBase uiUserBaseUpd) {
		this.uiUserBaseUpd = uiUserBaseUpd;
	}

	public UiUserBase getUiUserBaseCr() {
		return this.uiUserBaseCr;
	}

	public void setUiUserBaseCr(UiUserBase uiUserBaseCr) {
		this.uiUserBaseCr = uiUserBaseCr;
	}

}
