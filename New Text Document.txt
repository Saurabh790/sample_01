
/**
 * @author awagh
 *
 */
package com.optum.fads.pgp.behavior.api.mapper;

import org.mapstruct.*;
import org.mapstruct.factory.Mappers;

import com.optum.fads.pgp.behavior.api.domain.PrmBpBehaviorPatsT;
import com.optum.fads.pgp.behavior.api.dto.BehaviorPatternDTO;


@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface BehaviorPatternDetailMapper {
	BehaviorPatternDetailMapper INSTANCE = Mappers.getMapper(BehaviorPatternDetailMapper.class);
    @Mappings({ @Mapping(source = "bpId", target = "behaviorPatternId"),
            @Mapping(source = "behaviorPatternName", target = "behaviorPatternName"),
            @Mapping(source = "prmErExtractRuleT.erId" , target =  "erId"),
            @Mapping(source = "baId", target = "baId"),
            @Mapping(source =  "prmMbMasterT.mbCtecFid", target ="dataElementCode" ),
            @Mapping(source = "uiUserBaseCr.uiSystemId", target =  "createdBySystemId"),
            @Mapping(source = "uiUserBaseCr.userFullName", target =  "createdBy"),
            @Mapping(source = "uiUserBaseUpd.uiSystemId", target =  "modifiedBySystemId"),
            @Mapping(source = "uiUserBaseUpd.userFullName", target =  "modifiedBy")         })
    BehaviorPatternDTO convertToBehaviorPatternDTO(PrmBpBehaviorPatsT prmBpBehaviorPatsT);


    @InheritInverseConfiguration
    PrmBpBehaviorPatsT convertToPrmBpBehaviorPatsT(BehaviorPatternDTO behaviorPatternDTO);

}
