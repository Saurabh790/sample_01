import React from "react";
import { GenericGrid } from "../sub-components/fads/common/grid/pgp-grid/GenericGrid";

export default function FadsUserInformationHistory() {
  // mock rows
  const rows = React.useMemo(() => {
    const push = (systemId: string, seq: number, date: string, user: string,
      pi: string, pgp: string, ct: string, uid: string, email: string, last: string, first: string
    ) => ({
      id: `${systemId}-${seq}`,
      systemId,
      histSqNum: seq,
      changeDt: date,
      changeUsr: user,
      piGroup: pi,
      pgpGroup: pgp,
      ctGroup: ct,
      userId: uid,
      email,
      lastName: last,
      firstName: first,
    });

    return [
      push("SYS-10001", 5, "2025-07-19", "Silvers, Kristy", "FADS_PI_01", "FADS_PGP_A", "FADS_CT_X", "kristy.s", "kristy.s@optum.com", "Silvers", "Kristy"),
      push("SYS-10001", 4, "2024-12-08", "Silvers, Kristy", "FADS_PI_01", "FADS_PGP_A", "FADS_CT_X", "kristy.s", "kristy.s@optum.com", "Silvers", "Kristy"),
      push("SYS-10001", 3, "2024-03-10", "Silvers, Kristy", "FADS_PI_02", "FADS_PGP_A", "FADS_CT_Y", "kristy.s", "kristy.s@optum.com", "Silvers", "Kristy"),
      push("SYS-20002", 3, "2025-09-01", "Cupka, Cassandra", "FADS_PI_03", "FADS_PGP_B", "FADS_CT_Z", "cass.c", "cass.c@optum.com", "Cupka", "Cassandra"),
      push("SYS-20002", 2, "2024-11-21", "Cupka, Cassandra", "FADS_PI_03", "FADS_PGP_B", "FADS_CT_Z", "cass.c", "cass.c@optum.com", "Cupka", "Cassandra"),
      push("SYS-20002", 1, "2024-02-29", "Cupka, Cassandra", "FADS_PI_00", "FADS_PGP_B", "FADS_CT_W", "cass.c", "cass.c@optum.com", "Cupka", "Cassandra"),
    ];
  }, []);

  const columns = [
    { field: "systemId", headerName: "System ID", flex: 1 },
    { field: "histSqNum", headerName: "History Seq No.", flex: 1 },
    { field: "changeDt", headerName: "Change Dt", flex: 1 },
    { field: "changeUsr", headerName: "User", flex: 1.2 },
    { field: "piGroup", headerName: "PI Group", flex: 1 },
    { field: "pgpGroup", headerName: "PGP Group", flex: 1 },
    { field: "ctGroup", headerName: "CT Group", flex: 1 },
    { field: "userId", headerName: "User ID", flex: 1 },
    { field: "email", headerName: "Email Address", flex: 1.5 },
    { field: "lastName", headerName: "Last Name", flex: 1 },
    { field: "firstName", headerName: "First Name", flex: 1 },
  ];

  const initConfig = {
    header: "User Information History",
    description: "Sorted by History Seq No. (DESC)",

    // ✅ block server mode entirely
    fetchMode: "client",         // <-- REQUIRED for this Grid version
    url: null,
    baseURL: null,
    myEndPoint: null,
    showMyItemsToggle: false,

    // ✅ provide rows through transform callback
    dataTransformCallBack: () =>
      React.useCallback(() => ({
        rows,
        pageInfo: { totalRowCount: rows.length },
      }), [rows]),

    columns,
    rows,
    pageInfo: { totalRowCount: rows.length },
    exportModeValue: "client",
    enableActionColumn: false,
    defaultSortModel: [{ field: "histSqNum", sort: "desc" }],
    pageSizeOptions: [10, 25, 50, 100],
    initialPageSize: 10,
    excelExport: undefined, // disable since server mode off
  };

  return (
    <div style={{ padding: "90px 32px", width: "100%", minHeight: 600 }}>
      <GenericGrid {...initConfig} />
    </div>
  );
}
