
below is my current code application prop with context and project info which almost I hv to keep


server:
  port: 8080
  servlet:
    contextPath: /userroles
quickstart:
  generateOrderPeriod: 10s
  processOrderPeriod: 30s

spring:
  application:
    name: reportgroup
  jpa:
    database-platform: org.hibernate.dialect.SQLServer2016Dialect
    database: SQL_SERVER
    show-sql: false
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    jdbcUrl: jdbc:sqlserver://sql-fads-nprd-ma-ltss.database.windows.net:1433;database=FADS_NPRD_DB;user=fads_dbadmin_nprd@sql-fads-nprd-ma-ltss;
    userName: fads_app_nprd@sql-fads-nprd-ma-ltss
    password: meUydY5BFEpKb9Mt
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    hikari:
      maximum-pool-size: ${MAXIMUM_DB_POOL_SIZE:50}
      minimum-idle: ${MIN_POOL_IDLE:1}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:60000}
      idle-timeout: ${DB_POOL_IDLE_TIMEOUT:60000}
      leak-detection-threshold: ${LEAK_DETETCTION_THRESHOLD:0}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://maltss-nprd-idp.optum.com/idp/oauth2/maltss_aep_pprd_ui/.well-known/jwks
          jws-algorithms: RS512
management:
  endpoint:
    metrics.enabled: true
    prometheus.enabled: true
  endpoints.web.exposure.include:
    - health
    - info
    - prometheus
  prometheus.metrics.export.enabled: true
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: DEBUG
#        type: TRACE




below is changed code with right db information  
spring:
  application:
    name: fads-userroles-api
  jpa:
    database-platform: org.hibernate.dialect.SQLServer2016Dialect
    database: SQL_SERVER
    format-sql: true
    globally_quoted_identifiers: true
    show-sql: true
    hibernate:
       use-new-id-generator-mappings: true
       globally_quoted_identifiers: true
       naming:
            implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
            physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServer2016Dialect
        globally_quoted_identifiers: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    jdbcUrl: jdbc:sqlserver://wn000054716:1433;databaseName=fadsdb;encrypt=true;trustServerCertificate=true;
    userName: fads_dev
    password: qAut9fM.S!g3?385
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    hikari:
      maximum-pool-size: ${MAXIMUM_DB_POOL_SIZE:50}
      minimum-idle: ${MIN_POOL_IDLE:1}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:60000}
      idle-timeout: ${DB_POOL_IDLE_TIMEOUT:60000}
      leak-detection-threshold: ${LEAK_DETETCTION_THRESHOLD:0}
audit:
  application:
    name: casetracking
  log:
    type: SECURITY_AUDIT
 
server:
#  max-http-header-size: 16384
  port: 8080
  servlet:
    context-path: /userroles
    
app:
  context-path: fads/api/userroles/v1.0/
 
logging:
  file:
    path: /Users/aghosh98/userroles_app.log
  level:
#    root: DEBUG  ERROR
    org.springframework.http: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
#    org.hibernate: DEBUG
#    org.hibernate:
#      SQL: DEBUG
#      type: TRACE
 
management:
  endpoint:
    metrics.enabled: true
    prometheus.enabled: true
  endpoints.web.exposure.include:
    - health
    - info
    - prometheus
  metrics.export.prometheus.enabled: true
 
---
spring:
  profiles: build
 
#logging:
#  config: classpath:logback-test.xml
#  file: target/casetracking_app.log



so I hv to keep the required thinhgs so it can connect db now  below are my pom 

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.11</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.optum.fads</groupId>
	<artifactId>fads-user-roles-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>User-Roles-API</name>
	<description>User Roles API FOR FADS </description>
	<properties>
		<java.version>17</java.version>
		<spring-cloud-azure.version>5.23.0</spring-cloud-azure.version>
		<org.mapstruct.version>1.5.4.Final</org.mapstruct.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-keyvault</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.2.0</version> <!-- or newer -->
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.18.0</version>
		</dependency>
		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- MapStruct -->

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>10.2.0.jre11</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.5.0-M1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.azure.spring</groupId>
				<artifactId>spring-cloud-azure-dependencies</artifactId>
				<version>${spring-cloud-azure.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>



<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.11</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.optum.fads</groupId>
	<artifactId>fads-user-roles-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>User-Roles-API</name>
	<description>User Roles API FOR FADS </description>
	<properties>
		<java.version>17</java.version>
		<spring-cloud-azure.version>5.23.0</spring-cloud-azure.version>
		<org.mapstruct.version>1.5.4.Final</org.mapstruct.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>com.azure.spring</groupId>
			<artifactId>spring-cloud-azure-starter-keyvault</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.2.0</version> <!-- or newer -->
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.18.0</version>
		</dependency>
		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- MapStruct -->

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>10.2.0.jre11</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.5.0-M1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.azure.spring</groupId>
				<artifactId>spring-cloud-azure-dependencies</artifactId>
				<version>${spring-cloud-azure.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>


below is my java class to rfetirve data 

package com.optum.fads.userroles.api.dao;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.optum.fads.userroles.api.dto.UserListItem;

import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import jakarta.transaction.Transactional;

@Repository
@Transactional
public class UserDaoImpl implements UserDao {

    @PersistenceContext
    private EntityManager em;

    @Override
    public List<UserListItem> getUserList() {
        String jpql = """
            SELECT new com.example.demo.dto.UserListItem(
                u.uiSystemId, u.uiUserId, u.uiLastName, u.uiFirstName, u.uiTitle, u.uiEmailAddress,
                f.fadsGrpName, s.surGrpName, c.caseGrpName
            )
            FROM com.example.demo.entity.UiUserBase u
            JOIN com.example.demo.entity.SeUsrGrp g ON g.uiSystemId = u.uiSystemId
            JOIN com.example.demo.entity.SeFadsGrp f ON f.fadsGrpId = g.fadsGrpId
            JOIN com.example.demo.entity.SeSurGrp  s ON s.surGrpId  = g.surGrpId
            JOIN com.example.demo.entity.SeCaseGrp c ON c.caseGrpId = g.caseGrpId
            """;

        return em.createQuery(jpql, UserListItem.class).getResultList();
    }
}



now suggest me what changes I hv to make entirely in all this so it can connect to db 
