
Description:

Field dataRuleDetailMapper in com.optum.fads.pgp.datarules.service.impl.DataRuleDataService required a bean of type 'com.optum.fads.pgp.datarules.mapper.DataRuleDetailMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.optum.fads.pgp.datarules.mapper.DataRuleDetailMapper' in your configuration.





/**
 * @author awagh
 *
 */
package com.optum.fads.pgp.datarules.mapper;

import org.mapstruct.*;
import org.mapstruct.factory.Mappers;

import com.optum.fads.pgp.datarules.domain.PrmDrDataRuleT;
import com.optum.fads.pgp.datarules.dto.DataRuleDTO;

	
@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface DataRuleDetailMapper {
	DataRuleDetailMapper INSTANCE = Mappers.getMapper(DataRuleDetailMapper.class);
	@Mappings({ @Mapping(source = "drId", target = "dataRuleId"),
	    @Mapping(source = "dataRuleName", target = "dataRuleName"),
	    @Mapping(source = "prmMbMasterT.mbCtecFid" , target =  "dataElementId"),
	    @Mapping(source = "prmDrLuOperatorT.operatorCd", target = "operator"),
	    @Mapping(source = "uiUserBaseCr.uiSystemId", target = "createdBySystemId"),
	    @Mapping(source = "uiUserBaseUpd.uiSystemId", target = "modifiedBySystemId")})
	DataRuleDTO convertToDataRuleDTO(PrmDrDataRuleT prmDrDataRuleT);


	@InheritInverseConfiguration
	PrmDrDataRuleT convertToPrmDrDataRuleT(DataRuleDTO dataRuleDTO);

}
