this is one class where error is coming 
	ErROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.11.0:compile (default-compile) on project fads-pgp-study-api: Compilation failure: Compilation failure:
	[ERROR] /C:/Users/sgupt664/Project_workspace/FADS_03/fads-monolithic-application/fads-pgp-study-api/src/main/java/com/optum/fads/pgp/study/mapper/StudyDetailMapper.java:[66,65] No property named "prmDrDataRuleTs" exists in source parameter(s). Did you mean "prmPgDrTs"?




@Mappings({ @Mapping(target = "studyGroupId", source = "cgId"),
			@Mapping(target = "studyGroupName", source = "studyGroupName"), @Mapping(target = "cgType", source = "cgType"),
			@Mapping(target = "dataRules", source = "prmDrDataRuleTs") })
	public PeerGroup toStudyPeerGroup(PrmPgPeerGroupT prmPgPeerGroupT);


package com.optum.fads.pgp.datarules.domain;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import com.optum.fads.authorization.api.domain.UiUserBase;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;


/**
 * The persistent class for the PRM_PG_PEER_GROUP_T database table.
 * 
 */
@Entity
@Table(name="PRM_PG_PEER_GROUP_T")
public class PrmPgPeerGroupT implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name="CG_ID")
	private Integer cgId;

	@Column(name="CG_LEVEL")
	private String cgLevel;

	@Column(name="CG_NAME")
	private String studyGroupName;

	@Column(name="CG_TYPE")
	private String cgType;

	@Temporal(TemporalType.DATE)
	@Column(name="CREATE_DTE")
	private Date createDate;

	@Temporal(TemporalType.DATE)
	@Column(name="UPDATE_DTE")
	private Date updateDate;

	//bi-directional many-to-one association to PrmPgDrT
	@OneToMany(mappedBy="prmPgPeerGroupT")
	private List<PrmPgDrT> prmPgDrTs;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="CREATE_USR")
	private UiUserBase uiUserBaseCr;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="UPDATE_USR")
	private UiUserBase uiUserBaseUpd;


	public Integer getCgId() {
		return this.cgId;
	}

	public void setCgId(Integer cgId) {
		this.cgId = cgId;
	}

	public String getCgLevel() {
		return this.cgLevel;
	}

	public void setCgLevel(String cgLevel) {
		this.cgLevel = cgLevel;
	}

	public String getStudyGroupName() {
		return studyGroupName;
	}

	public void setStudyGroupName(String studyGroupName) {
		this.studyGroupName = studyGroupName;
	}

	public String getCgType() {
		return this.cgType;
	}

	public void setCgType(String cgType) {
		this.cgType = cgType;
	}

	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	public List<PrmPgDrT> getPrmPgDrTs() {
		return this.prmPgDrTs;
	}

	public void setPrmPgDrTs(List<PrmPgDrT> prmPgDrTs) {
		this.prmPgDrTs = prmPgDrTs;
	}

	public PrmPgDrT addPrmPgDrT(PrmPgDrT prmPgDrT) {
		getPrmPgDrTs().add(prmPgDrT);
		prmPgDrT.setPrmPgPeerGroupT(this);

		return prmPgDrT;
	}

	public PrmPgDrT removePrmPgDrT(PrmPgDrT prmPgDrT) {
		getPrmPgDrTs().remove(prmPgDrT);
		prmPgDrT.setPrmPgPeerGroupT(null);

		return prmPgDrT;
	}

	public UiUserBase getUiUserBaseUpd() {
		return this.uiUserBaseUpd;
	}

	public void setUiUserBaseUpd(UiUserBase uiUserBaseUpd) {
		this.uiUserBaseUpd = uiUserBaseUpd;
	}

	public UiUserBase getUiUserBaseCr() {
		return this.uiUserBaseCr;
	}

	public void setUiUserBaseCr(UiUserBase uiUserBaseCr) {
		this.uiUserBaseCr = uiUserBaseCr;
	}

}
