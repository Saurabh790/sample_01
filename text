[ERROR] /C:/Users/sgupt664/Project_workspace/FADS_03/fads-monolithic-application/fads-pgp-study-api/src/main/java/com/optum/fads/pgp/study/mapper/StudyDetailMapper.java:[70,68] No property named "drName" exists in source parameter(s). Did you mean "drId"?

@Mappings({ @Mapping(target = "dataRuleId", source = "drId"),
			@Mapping(target = "dataRuleName", source = "drName") })
	public DataRule toDayaTule(PrmDrDataRuleT prmDrDataRuleT);
	
	package com.optum.fads.pgp.datarules.domain;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.List;

import com.optum.fads.authorization.api.domain.UiUserBase;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;


/**
 * The persistent class for the PRM_DR_DATA_RULE_T database table.
 * 
 */
@Entity
@Table(name="PRM_DR_DATA_RULE_T")
public class PrmDrDataRuleT implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name="DR_ID")
	private Integer drId;

	//@Temporal(TemporalType.DATE)
	@Column(name="CREATE_DTE")
	private LocalDateTime createDate;

	@Column(name="DR_NAME")
	private String dataRuleName;

	//@Temporal(TemporalType.DATE)
	@Column(name="UPDATE_DTE")
	private LocalDateTime updateDate;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="UPDATE_USR")
	private UiUserBase uiUserBaseUpd;

	//bi-directional many-to-one association to UiUserBase
	@ManyToOne
	@JoinColumn(name="CREATE_USR")
	private UiUserBase uiUserBaseCr;

	//bi-directional many-to-one association to PrmDrLuOperatorT
	@ManyToOne
	@JoinColumn(name="DR_OPERATOR")
	private PrmDrLuOperatorT prmDrLuOperatorT;

	//bi-directional many-to-one association to PrmMbMasterT
	@ManyToOne
	@JoinColumn(name="MB_CTEC_FID")
	private PrmMbMasterT prmMbMasterT;

	//bi-directional many-to-one association to PrmDrRangesT
	@OneToMany(mappedBy="prmDrDataRuleT")
	private List<PrmDrRangesT> prmDrRangesTs;

	//bi-directional many-to-one association to PrmDrSingleValuesT
	@OneToMany(mappedBy="prmDrDataRuleT")
	private List<PrmDrSingleValuesT> prmDrSingleValuesTs;

	public Integer getDrId() {
		return this.drId;
	}

	public void setDrId(Integer drId) {
		this.drId = drId;
	}

	public LocalDateTime getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(LocalDateTime createDate) {
		this.createDate = createDate;
	}

	public String getDataRuleName() {
		return this.dataRuleName;
	}

	public void setDataRuleName(String dataRuleName) {
		this.dataRuleName = dataRuleName;
	}

	public LocalDateTime getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(LocalDateTime updateDate) {
		this.updateDate = updateDate;
	}

	public UiUserBase getUiUserBaseUpd() {
		return uiUserBaseUpd;
	}

	public void setUiUserBaseUpd(UiUserBase uiUserBaseUpd) {
		this.uiUserBaseUpd = uiUserBaseUpd;
	}

	public UiUserBase getUiUserBaseCr() {
		return uiUserBaseCr;
	}

	public void setUiUserBaseCr(UiUserBase uiUserBaseCr) {
		this.uiUserBaseCr = uiUserBaseCr;
	}

	public PrmDrLuOperatorT getPrmDrLuOperatorT() {
		return this.prmDrLuOperatorT;
	}

	public void setPrmDrLuOperatorT(PrmDrLuOperatorT prmDrLuOperatorT) {
		this.prmDrLuOperatorT = prmDrLuOperatorT;
	}

	public PrmMbMasterT getPrmMbMasterT() {
		return this.prmMbMasterT;
	}

	public void setPrmMbMasterT(PrmMbMasterT prmMbMasterT) {
		this.prmMbMasterT = prmMbMasterT;
	}

	public List<PrmDrRangesT> getPrmDrRangesTs() {
		return this.prmDrRangesTs;
	}

	public void setPrmDrRangesTs(List<PrmDrRangesT> prmDrRangesTs) {
		this.prmDrRangesTs = prmDrRangesTs;
	}

	public PrmDrRangesT addPrmDrRangesT(PrmDrRangesT prmDrRangesT) {
		getPrmDrRangesTs().add(prmDrRangesT);
		prmDrRangesT.setPrmDrDataRuleT(this);

		return prmDrRangesT;
	}

	public PrmDrRangesT removePrmDrRangesT(PrmDrRangesT prmDrRangesT) {
		getPrmDrRangesTs().remove(prmDrRangesT);
		prmDrRangesT.setPrmDrDataRuleT(null);

		return prmDrRangesT;
	}

	public List<PrmDrSingleValuesT> getPrmDrSingleValuesTs() {
		return this.prmDrSingleValuesTs;
	}

	public void setPrmDrSingleValuesTs(List<PrmDrSingleValuesT> prmDrSingleValuesTs) {
		this.prmDrSingleValuesTs = prmDrSingleValuesTs;
	}

	public PrmDrSingleValuesT addPrmDrSingleValuesT(PrmDrSingleValuesT prmDrSingleValuesT) {
		getPrmDrSingleValuesTs().add(prmDrSingleValuesT);
		prmDrSingleValuesT.setPrmDrDataRuleT(this);

		return prmDrSingleValuesT;
	}

	public PrmDrSingleValuesT removePrmDrSingleValuesT(PrmDrSingleValuesT prmDrSingleValuesT) {
		getPrmDrSingleValuesTs().remove(prmDrSingleValuesT);
		prmDrSingleValuesT.setPrmDrDataRuleT(null);

		return prmDrSingleValuesT;
	}

}
